function createElement(t,e){"use strict";return"<"+t+">"+e+"</"+t+">"}function createBtn(t,e,o,i){"use strict";return'<button class="'+e+'" id="'+t+o+'" value="'+o+'" name="'+t+'">'+i+"</button>"}function load(t,e){"use strict";$("#"+t).text(e)}function loadForm(t,e){"use strict";$("#"+t).val(e)}function ObjectToString(t){"use strict";for(var e=Object.getOwnPropertyNames(t),o="",i=0;i<e.length;i++)"object"!=typeof t[e[i]]?o+=" "+t[e[i]]:o+=" "+ObjectToString(t[e[i]]);return o}function destructuringObject(t,e){"use strict";for(var o=Object.getOwnPropertyNames(t),i=0;i<o.length;i++)loadForm(e[i],t[o[i]])}$(document).ready(function(){"use strict";service().getUserId(localStorage.getItem("id"),function(t){loadDetails(t),backButton(),$(".loader").fadeOut()})}),$(document).ready(function(){"use strict";"create"===localStorage.getItem("selector")?loadCreate():loadModifyRemove(),backButton()}),$(document).ready(function(){"use strict";service().getUser(function(t){loadTable("userTable",t),clickBtnTable("form.html","create",""),submitModal(),$(".loader").fadeOut()})});var url="https://jsonplaceholder.typicode.com/users/";function service(){"use strict";return{getUser:function(t){$.getJSON(url,t)},getUserId:function(t,e){$.getJSON(url+t,e)}}}function clickBtnTable(t,e,o){"use strict";$("#"+e+o).click(function(){localStorage.setItem("id",o),localStorage.setItem("selector",e),window.open(t,"_self")})}function submit(t,e,o,i,n){"use strict";function r(){$.ajax({url:url+t,type:e,data:o,success:function(t,e){$("#"+i).text(n+" "+e),setTimeout(function(){window.open("index.html","_self")},2e3)},error:function(t,e,o){console.log(o)}})}$("#submit").click(function(){"delete"===e?window.confirm("Vuoi veramente cancellare l'utente?")&&r():r()})}function backButton(){"use strict";$("#back").click(function(){window.open("index.html","_self")})}function submitModal(){"use strict";$("#submit").click(function(){$("#modalContact").modal("toggle")})}function createTDS(t){"use strict";for(var e=Object.getOwnPropertyNames(t),o="",i=1;i<4;i++)o+=createElement("td",t[e[i]]);return o}function createTr(t){"use strict";var e=createTDS(t);return createElement("tr",e+=createElement("td",createBtn("details","btn btn-primary",t.id,"Dettagli")+createBtn("modify","btn btn-primary",t.id,"Modifica")+createBtn("remove","btn btn-primary",t.id,"Rimuovi")))}function loadRowTable(t,e){"use strict";var o=createTr(e);$("#"+t).append(o),clickBtnTable("details.html","details",e.id),clickBtnTable("form.html","modify",e.id),clickBtnTable("form.html","remove",e.id)}function loadTable(t,e){"use strict";for(var o=0;o<e.length;o++)loadRowTable(t,e[o])}function bindingDetails(t,e){"use strict";load(e,"object"!=typeof t?t:ObjectToString(t))}function loadDetails(t){"use strict";for(var e=Object.getOwnPropertyNames(t),o=["id","name","username","email","address","phone","website"],i=0;i<o.length;i++)bindingDetails(t[e[i]],o[i])}function loadCreate(){"use strict";$("#title").text("Crea"),$(".loader").fadeOut(),submit("","post",$("#contact").serialize,"result","Create")}function bindingForm(t,e){"use strict";"object"!=typeof t?loadForm(e,t):destructuringObject(t,["street","suite","city","zipcode"])}function bindForm(t){"use strict";for(var e=Object.getOwnPropertyNames(t),o=["id","name","username","email","","phone","website"],i=1;i<o.length;i++)bindingForm(t[e[i]],o[i])}function loadModify(){"use strict";$("#title").text("Modifica"),submit(localStorage.getItem("id"),"put",$("#contact").serialize,"result","modify")}function loadRemove(){"use strict";$("#title").text("Rimuovi"),$("#submit").val("Cancella"),submit(localStorage.getItem("id"),"delete",$("#contact").serialize,"result","delete")}function loadModifyRemove(){"use strict";service().getUserId(localStorage.getItem("id"),function(t){bindForm(t),"modify"===localStorage.getItem("selector")?loadModify():loadRemove(),$(".loader").fadeOut()})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
